// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: proto/BFTBaxos/BFTBaxos.proto

package BFTBaxos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Phase 1: Prepare-Promise phase
type PrepareMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	// Safety
	Ballot uint64 `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	// Liveness
	K         float32         `protobuf:"fixed32,3,opt,name=K,proto3" json:"K,omitempty"`
	TimeStamp []*BFTTimeStamp `protobuf:"bytes,4,rep,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	// if ballot is ID of node no need for BallotQC (the first try)
	BallotQC *BallotQuorumCert `protobuf:"bytes,5,opt,name=BallotQC,proto3,oneof" json:"BallotQC,omitempty"`
}

func (x *PrepareMsg) Reset() {
	*x = PrepareMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrepareMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrepareMsg) ProtoMessage() {}

func (x *PrepareMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrepareMsg.ProtoReflect.Descriptor instead.
func (*PrepareMsg) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{0}
}

func (x *PrepareMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PrepareMsg) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *PrepareMsg) GetK() float32 {
	if x != nil {
		return x.K
	}
	return 0
}

func (x *PrepareMsg) GetTimeStamp() []*BFTTimeStamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *PrepareMsg) GetBallotQC() *BallotQuorumCert {
	if x != nil {
		return x.BallotQC
	}
	return nil
}

type PromiseMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contention bool   `protobuf:"varint,1,opt,name=Contention,proto3" json:"Contention,omitempty"`
	Ballot     uint64 `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	// optional Ballot previously accepted
	AcceptedBallot *uint64 `protobuf:"varint,3,opt,name=AcceptedBallot,proto3,oneof" json:"AcceptedBallot,omitempty"`
	// optional Value previously accepted
	AcceptedValue *string `protobuf:"bytes,4,opt,name=AcceptedValue,proto3,oneof" json:"AcceptedValue,omitempty"`
	// optional QC for AcceptedValue
	PreAcceptQC *AcceptQuorumCert `protobuf:"bytes,5,opt,name=PreAcceptQC,proto3,oneof" json:"PreAcceptQC,omitempty"`
	// Liveness
	TimeStamp *BFTTimeStamp `protobuf:"bytes,6,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	// Partial signature over the NextBallot
	NextBallot uint64            `protobuf:"varint,7,opt,name=NextBallot,proto3" json:"NextBallot,omitempty"`
	BallotSig  *PartialSignature `protobuf:"bytes,8,opt,name=BallotSig,proto3" json:"BallotSig,omitempty"`
}

func (x *PromiseMsg) Reset() {
	*x = PromiseMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromiseMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromiseMsg) ProtoMessage() {}

func (x *PromiseMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromiseMsg.ProtoReflect.Descriptor instead.
func (*PromiseMsg) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{1}
}

func (x *PromiseMsg) GetContention() bool {
	if x != nil {
		return x.Contention
	}
	return false
}

func (x *PromiseMsg) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *PromiseMsg) GetAcceptedBallot() uint64 {
	if x != nil && x.AcceptedBallot != nil {
		return *x.AcceptedBallot
	}
	return 0
}

func (x *PromiseMsg) GetAcceptedValue() string {
	if x != nil && x.AcceptedValue != nil {
		return *x.AcceptedValue
	}
	return ""
}

func (x *PromiseMsg) GetPreAcceptQC() *AcceptQuorumCert {
	if x != nil {
		return x.PreAcceptQC
	}
	return nil
}

func (x *PromiseMsg) GetTimeStamp() *BFTTimeStamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *PromiseMsg) GetNextBallot() uint64 {
	if x != nil {
		return x.NextBallot
	}
	return 0
}

func (x *PromiseMsg) GetBallotSig() *PartialSignature {
	if x != nil {
		return x.BallotSig
	}
	return nil
}

// Phase 2: Pre_Propose-Pre_Accept phase
type PreProposeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From   string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	Ballot uint64 `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	// Value chosen according to the PromiseSet
	PreProposeValue string `protobuf:"bytes,3,opt,name=Pre_proposeValue,json=PreProposeValue,proto3" json:"Pre_proposeValue,omitempty"`
	// A list of Promise, used to convince acceptors the Pre_proposeValue has the highest ballot number
	PromiseSet []*PromiseMsg `protobuf:"bytes,4,rep,name=PromiseSet,proto3" json:"PromiseSet,omitempty"`
}

func (x *PreProposeMsg) Reset() {
	*x = PreProposeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreProposeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreProposeMsg) ProtoMessage() {}

func (x *PreProposeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreProposeMsg.ProtoReflect.Descriptor instead.
func (*PreProposeMsg) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{2}
}

func (x *PreProposeMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *PreProposeMsg) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *PreProposeMsg) GetPreProposeValue() string {
	if x != nil {
		return x.PreProposeValue
	}
	return ""
}

func (x *PreProposeMsg) GetPromiseSet() []*PromiseMsg {
	if x != nil {
		return x.PromiseSet
	}
	return nil
}

// Used in both phase2 and phase3
type AcceptMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contention bool   `protobuf:"varint,1,opt,name=Contention,proto3" json:"Contention,omitempty"`
	Phase      uint64 `protobuf:"varint,2,opt,name=Phase,proto3" json:"Phase,omitempty"`
	Ballot     uint64 `protobuf:"varint,3,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	// Value are pre_accepted/accepted
	AcceptValue string `protobuf:"bytes,4,opt,name=AcceptValue,proto3" json:"AcceptValue,omitempty"`
	// Partial signature over the tuple < Phase, Ballot, AcceptValue >
	SafetySig *PartialSignature `protobuf:"bytes,5,opt,name=SafetySig,proto3" json:"SafetySig,omitempty"`
	// Liveness
	TimeStamp *BFTTimeStamp `protobuf:"bytes,6,opt,name=TimeStamp,proto3" json:"TimeStamp,omitempty"`
	// Partial signature over the NextBallot
	NextBallot uint64            `protobuf:"varint,7,opt,name=NextBallot,proto3" json:"NextBallot,omitempty"`
	BallotSig  *PartialSignature `protobuf:"bytes,8,opt,name=BallotSig,proto3" json:"BallotSig,omitempty"`
}

func (x *AcceptMsg) Reset() {
	*x = AcceptMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptMsg) ProtoMessage() {}

func (x *AcceptMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptMsg.ProtoReflect.Descriptor instead.
func (*AcceptMsg) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{3}
}

func (x *AcceptMsg) GetContention() bool {
	if x != nil {
		return x.Contention
	}
	return false
}

func (x *AcceptMsg) GetPhase() uint64 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *AcceptMsg) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *AcceptMsg) GetAcceptValue() string {
	if x != nil {
		return x.AcceptValue
	}
	return ""
}

func (x *AcceptMsg) GetSafetySig() *PartialSignature {
	if x != nil {
		return x.SafetySig
	}
	return nil
}

func (x *AcceptMsg) GetTimeStamp() *BFTTimeStamp {
	if x != nil {
		return x.TimeStamp
	}
	return nil
}

func (x *AcceptMsg) GetNextBallot() uint64 {
	if x != nil {
		return x.NextBallot
	}
	return 0
}

func (x *AcceptMsg) GetBallotSig() *PartialSignature {
	if x != nil {
		return x.BallotSig
	}
	return nil
}

type AcceptQuorumCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phase  uint64 `protobuf:"varint,1,opt,name=Phase,proto3" json:"Phase,omitempty"`
	Ballot uint64 `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	// Value are pre_accepted/accepted
	AcceptValue string `protobuf:"bytes,3,opt,name=AcceptValue,proto3" json:"AcceptValue,omitempty"`
	// QuorumSignature is combined from a quorum of partial signature
	Sig *QuorumSignature `protobuf:"bytes,4,opt,name=Sig,proto3" json:"Sig,omitempty"`
}

func (x *AcceptQuorumCert) Reset() {
	*x = AcceptQuorumCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptQuorumCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptQuorumCert) ProtoMessage() {}

func (x *AcceptQuorumCert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptQuorumCert.ProtoReflect.Descriptor instead.
func (*AcceptQuorumCert) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{4}
}

func (x *AcceptQuorumCert) GetPhase() uint64 {
	if x != nil {
		return x.Phase
	}
	return 0
}

func (x *AcceptQuorumCert) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *AcceptQuorumCert) GetAcceptValue() string {
	if x != nil {
		return x.AcceptValue
	}
	return ""
}

func (x *AcceptQuorumCert) GetSig() *QuorumSignature {
	if x != nil {
		return x.Sig
	}
	return nil
}

// Phase 3: Propose-Accept phase
type ProposeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From         string            `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	Ballot       uint64            `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	ProposeValue string            `protobuf:"bytes,3,opt,name=ProposeValue,proto3" json:"ProposeValue,omitempty"`
	PreAcceptQC  *AcceptQuorumCert `protobuf:"bytes,4,opt,name=PreAcceptQC,proto3" json:"PreAcceptQC,omitempty"`
}

func (x *ProposeMsg) Reset() {
	*x = ProposeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProposeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeMsg) ProtoMessage() {}

func (x *ProposeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeMsg.ProtoReflect.Descriptor instead.
func (*ProposeMsg) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{5}
}

func (x *ProposeMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *ProposeMsg) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *ProposeMsg) GetProposeValue() string {
	if x != nil {
		return x.ProposeValue
	}
	return ""
}

func (x *ProposeMsg) GetPreAcceptQC() *AcceptQuorumCert {
	if x != nil {
		return x.PreAcceptQC
	}
	return nil
}

// Commit
type CommitMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From        string            `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	Ballot      uint64            `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	CommitValue string            `protobuf:"bytes,3,opt,name=CommitValue,proto3" json:"CommitValue,omitempty"`
	AcceptQC    *AcceptQuorumCert `protobuf:"bytes,4,opt,name=AcceptQC,proto3" json:"AcceptQC,omitempty"`
}

func (x *CommitMsg) Reset() {
	*x = CommitMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitMsg) ProtoMessage() {}

func (x *CommitMsg) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitMsg.ProtoReflect.Descriptor instead.
func (*CommitMsg) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{6}
}

func (x *CommitMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *CommitMsg) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *CommitMsg) GetCommitValue() string {
	if x != nil {
		return x.CommitValue
	}
	return ""
}

func (x *CommitMsg) GetAcceptQC() *AcceptQuorumCert {
	if x != nil {
		return x.AcceptQC
	}
	return nil
}

// crypto part
type PartialSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PartialSignature) Reset() {
	*x = PartialSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PartialSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PartialSignature) ProtoMessage() {}

func (x *PartialSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PartialSignature.ProtoReflect.Descriptor instead.
func (*PartialSignature) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{7}
}

type QuorumSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QuorumSignature) Reset() {
	*x = QuorumSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuorumSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuorumSignature) ProtoMessage() {}

func (x *QuorumSignature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuorumSignature.ProtoReflect.Descriptor instead.
func (*QuorumSignature) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{8}
}

type BallotQuorumCert struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextBallot uint64           `protobuf:"varint,1,opt,name=NextBallot,proto3" json:"NextBallot,omitempty"`
	BallotSig  *QuorumSignature `protobuf:"bytes,2,opt,name=BallotSig,proto3" json:"BallotSig,omitempty"`
}

func (x *BallotQuorumCert) Reset() {
	*x = BallotQuorumCert{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BallotQuorumCert) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BallotQuorumCert) ProtoMessage() {}

func (x *BallotQuorumCert) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BallotQuorumCert.ProtoReflect.Descriptor instead.
func (*BallotQuorumCert) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{9}
}

func (x *BallotQuorumCert) GetNextBallot() uint64 {
	if x != nil {
		return x.NextBallot
	}
	return 0
}

func (x *BallotQuorumCert) GetBallotSig() *QuorumSignature {
	if x != nil {
		return x.BallotSig
	}
	return nil
}

type BFTTimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Singer    string `protobuf:"bytes,1,opt,name=Singer,proto3" json:"Singer,omitempty"`
	Ballot    uint64 `protobuf:"varint,2,opt,name=Ballot,proto3" json:"Ballot,omitempty"`
	Timestamp int64  `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
}

func (x *BFTTimeStamp) Reset() {
	*x = BFTTimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BFTTimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BFTTimeStamp) ProtoMessage() {}

func (x *BFTTimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BFTTimeStamp.ProtoReflect.Descriptor instead.
func (*BFTTimeStamp) Descriptor() ([]byte, []int) {
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP(), []int{10}
}

func (x *BFTTimeStamp) GetSinger() string {
	if x != nil {
		return x.Singer
	}
	return ""
}

func (x *BFTTimeStamp) GetBallot() uint64 {
	if x != nil {
		return x.Ballot
	}
	return 0
}

func (x *BFTTimeStamp) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_proto_BFTBaxos_BFTBaxos_proto protoreflect.FileDescriptor

var file_proto_BFTBaxos_BFTBaxos_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x42, 0x46, 0x54, 0x42, 0x61, 0x78, 0x6f, 0x73,
	0x2f, 0x42, 0x46, 0x54, 0x42, 0x61, 0x78, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d, 0x73,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x4b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x4b, 0x12, 0x2b, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x42, 0x46, 0x54, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x32, 0x0a, 0x08, 0x42, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x51, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42, 0x61, 0x6c,
	0x6c, 0x6f, 0x74, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x48, 0x00, 0x52,
	0x08, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x51, 0x43, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09,
	0x5f, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x51, 0x43, 0x22, 0x89, 0x03, 0x0a, 0x0a, 0x50, 0x72,
	0x6f, 0x6d, 0x69, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74,
	0x12, 0x2b, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x88, 0x01, 0x01, 0x12, 0x29, 0x0a,
	0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x88, 0x01, 0x01, 0x12, 0x38, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x43, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74,
	0x48, 0x02, 0x52, 0x0b, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x43, 0x88,
	0x01, 0x01, 0x12, 0x2b, 0x0a, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x42, 0x46, 0x54, 0x54, 0x69, 0x6d, 0x65, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12,
	0x2f, 0x0a, 0x09, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x67,
	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x42, 0x61, 0x6c,
	0x6c, 0x6f, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x51, 0x43, 0x22, 0x93, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x6f, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x42,
	0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c,
	0x6c, 0x6f, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x50, 0x72, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f,
	0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x50,
	0x72, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x53, 0x65, 0x74, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x52,
	0x0a, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x53, 0x65, 0x74, 0x22, 0xaa, 0x02, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x68, 0x61,
	0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x09, 0x53, 0x61, 0x66,
	0x65, 0x74, 0x79, 0x53, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x09, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x53, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x42, 0x46, 0x54, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x54, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x4e, 0x65, 0x78, 0x74, 0x42,
	0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x4e, 0x65, 0x78,
	0x74, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x2f, 0x0a, 0x09, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x53, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x42,
	0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x22, 0x86, 0x01, 0x0a, 0x10, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x50, 0x68, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x50, 0x68,
	0x61, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x22, 0x0a,
	0x03, 0x53, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x51, 0x75, 0x6f,
	0x72, 0x75, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x03, 0x53, 0x69,
	0x67, 0x22, 0x91, 0x01, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x73, 0x67,
	0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x33, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x43, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x0b, 0x50, 0x72, 0x65, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x51, 0x43, 0x22, 0x88, 0x01, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x43, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x75, 0x6f, 0x72,
	0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x52, 0x08, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x51, 0x43,
	0x22, 0x12, 0x0a, 0x10, 0x50, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x22, 0x11, 0x0a, 0x0f, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x62, 0x0a, 0x10, 0x42, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x4e,
	0x65, 0x78, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x2e, 0x0a, 0x09, 0x42,
	0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x52, 0x09, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x53, 0x69, 0x67, 0x22, 0x5c, 0x0a, 0x0c, 0x42,
	0x46, 0x54, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x53,
	0x69, 0x6e, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x69, 0x6e,
	0x67, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x42, 0x61, 0x6c, 0x6c, 0x6f, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x32, 0xa9, 0x01, 0x0a, 0x08, 0x42, 0x46,
	0x54, 0x42, 0x61, 0x78, 0x6f, 0x73, 0x12, 0x23, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73,
	0x65, 0x12, 0x0b, 0x2e, 0x50, 0x72, 0x65, 0x70, 0x61, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x0b,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x09, 0x50,
	0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x0e, 0x2e, 0x50, 0x72, 0x65, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x0a, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x21, 0x0a, 0x06, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x12, 0x0b,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x4d, 0x73, 0x67, 0x1a, 0x0a, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x2c, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69,
	0x74, 0x12, 0x0a, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x4d, 0x73, 0x67, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_proto_BFTBaxos_BFTBaxos_proto_rawDescOnce sync.Once
	file_proto_BFTBaxos_BFTBaxos_proto_rawDescData = file_proto_BFTBaxos_BFTBaxos_proto_rawDesc
)

func file_proto_BFTBaxos_BFTBaxos_proto_rawDescGZIP() []byte {
	file_proto_BFTBaxos_BFTBaxos_proto_rawDescOnce.Do(func() {
		file_proto_BFTBaxos_BFTBaxos_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_BFTBaxos_BFTBaxos_proto_rawDescData)
	})
	return file_proto_BFTBaxos_BFTBaxos_proto_rawDescData
}

var file_proto_BFTBaxos_BFTBaxos_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_BFTBaxos_BFTBaxos_proto_goTypes = []interface{}{
	(*PrepareMsg)(nil),       // 0: PrepareMsg
	(*PromiseMsg)(nil),       // 1: PromiseMsg
	(*PreProposeMsg)(nil),    // 2: PreProposeMsg
	(*AcceptMsg)(nil),        // 3: AcceptMsg
	(*AcceptQuorumCert)(nil), // 4: AcceptQuorumCert
	(*ProposeMsg)(nil),       // 5: ProposeMsg
	(*CommitMsg)(nil),        // 6: CommitMsg
	(*PartialSignature)(nil), // 7: PartialSignature
	(*QuorumSignature)(nil),  // 8: QuorumSignature
	(*BallotQuorumCert)(nil), // 9: BallotQuorumCert
	(*BFTTimeStamp)(nil),     // 10: BFTTimeStamp
	(*emptypb.Empty)(nil),    // 11: google.protobuf.Empty
}
var file_proto_BFTBaxos_BFTBaxos_proto_depIdxs = []int32{
	10, // 0: PrepareMsg.TimeStamp:type_name -> BFTTimeStamp
	9,  // 1: PrepareMsg.BallotQC:type_name -> BallotQuorumCert
	4,  // 2: PromiseMsg.PreAcceptQC:type_name -> AcceptQuorumCert
	10, // 3: PromiseMsg.TimeStamp:type_name -> BFTTimeStamp
	7,  // 4: PromiseMsg.BallotSig:type_name -> PartialSignature
	1,  // 5: PreProposeMsg.PromiseSet:type_name -> PromiseMsg
	7,  // 6: AcceptMsg.SafetySig:type_name -> PartialSignature
	10, // 7: AcceptMsg.TimeStamp:type_name -> BFTTimeStamp
	7,  // 8: AcceptMsg.BallotSig:type_name -> PartialSignature
	8,  // 9: AcceptQuorumCert.Sig:type_name -> QuorumSignature
	4,  // 10: ProposeMsg.PreAcceptQC:type_name -> AcceptQuorumCert
	4,  // 11: CommitMsg.AcceptQC:type_name -> AcceptQuorumCert
	8,  // 12: BallotQuorumCert.BallotSig:type_name -> QuorumSignature
	0,  // 13: BFTBaxos.Promise:input_type -> PrepareMsg
	2,  // 14: BFTBaxos.PreAccept:input_type -> PreProposeMsg
	5,  // 15: BFTBaxos.Accept:input_type -> ProposeMsg
	6,  // 16: BFTBaxos.Commit:input_type -> CommitMsg
	1,  // 17: BFTBaxos.Promise:output_type -> PromiseMsg
	3,  // 18: BFTBaxos.PreAccept:output_type -> AcceptMsg
	3,  // 19: BFTBaxos.Accept:output_type -> AcceptMsg
	11, // 20: BFTBaxos.Commit:output_type -> google.protobuf.Empty
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_BFTBaxos_BFTBaxos_proto_init() }
func file_proto_BFTBaxos_BFTBaxos_proto_init() {
	if File_proto_BFTBaxos_BFTBaxos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrepareMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromiseMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreProposeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptQuorumCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProposeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PartialSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuorumSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BallotQuorumCert); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BFTTimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_proto_BFTBaxos_BFTBaxos_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_BFTBaxos_BFTBaxos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_BFTBaxos_BFTBaxos_proto_goTypes,
		DependencyIndexes: file_proto_BFTBaxos_BFTBaxos_proto_depIdxs,
		MessageInfos:      file_proto_BFTBaxos_BFTBaxos_proto_msgTypes,
	}.Build()
	File_proto_BFTBaxos_BFTBaxos_proto = out.File
	file_proto_BFTBaxos_BFTBaxos_proto_rawDesc = nil
	file_proto_BFTBaxos_BFTBaxos_proto_goTypes = nil
	file_proto_BFTBaxos_BFTBaxos_proto_depIdxs = nil
}
